#region Using Statements

using Microsoft.Xna.Framework;

using System;
using System.IO;
using System.Reflection;
using System.Text.RegularExpressions;
using System.Xml;

#endregion

namespace Artemis.Engine.Graphics.Animation
{
    /// <summary>
    /// A reader for the AAML animation files
    /// </summary>
    public class AAMLFileReader
    {
        /// <summary>
        /// The name of the AAML file, relative to the application startup directory.
        /// </summary>
        public string AAMLFileName { get; private set; }

        /// <summary>
        /// The Animation Map generated by the AAML file provided.
        /// </summary>
        public AnimationMap Map { get; private set; }

        public AAMLFileReader(string fileName)
        {
            AAMLFileName = fileName;
        }

        /// <summary>
        /// Read the AAML file
        /// </summary>
        public void Read()
        {
            var AAMLFile = new XmlDocument();
            try
            {
                AAMLFile.Load(AAMLFileName);
            }
            catch (IOException)
            {
                throw new IOException(
                    String.Format(
                        "The animation file with name '{0}' could not be loaded. The most common causes for this error are " +
                        "either the path was misspelled, or the 'Copy to Output Directory' property of your setup file " +
                        "is not set to 'Copy if newer'. To change this in VS, right click on your setup file in the solution " +
                        "explorer, select properties, and change the 'Copy to Output Directory' property to 'Copy if newer'.",
                        AAMLFileName
                        )
                    );
            }

            XmlElement root;
            try
            {
                root = AAMLFile.ChildNodes[1] as XmlElement;
            }
            catch (IndexOutOfRangeException)
            {
                // LOG: Could not load animation file, invalid Xml structure
                return;
            }

            XmlElement spriteSheet, animationMap;
            try
            {
                spriteSheet = root.ChildNodes[1] as XmlElement;
                animationMap = root.ChildNodes[2] as XmlElement;
            }
            catch (IndexOutOfRangeException)
            {
                return;
            }

            SpriteSheetReader sheetReader = new SpriteSheetReader(spriteSheet);
            AnimationMapReader mapReader = new AnimationMapReader(animationMap);
            sheetReader.Load();
            mapReader.Load();


            Map = new AnimationMap(mapReader.States, sheetReader.Sheet, mapReader.InitState);  // IDLE is temp.
        }
    }
}
